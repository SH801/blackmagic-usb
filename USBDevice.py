# -LICENSE-START-
# Copyright (c) 2020 Blackmagic Design
# 
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
# 
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
# -LICENSE-END-
#


import fixedint
import usb1

USBContext				= usb1.USBContext
USBDeviceHandle			= usb1.USBDeviceHandle
USBDeviceInterface 		= usb1.USBDevice
USBInterfaceSetting 	= usb1.USBInterfaceSetting

class USBDevice:
	
	def __init__(	self,
	      			usbContext: USBContext,
                 	id: fixedint.UInt64,
                	vendorId: fixedint.UInt16,
                	productId: fixedint.UInt16,
                	name: str,
                	deviceInterface: USBDeviceInterface):
		self.m_usbContext		= usbContext
		self.m_deviceHandle 	= None
		self.m_deviceId 		= id
		self.m_vendorId 		= vendorId
		self.m_productId 		= productId
		self.m_deviceName 		= name
		self.m_deviceInterface 	= deviceInterface
    
	def __eq__(self, other):
		if isinstance(other, self.__class__) is False: return False
		return ((self.m_deviceId == other.m_deviceId) &
				(self.m_vendorId == other.m_vendorId) &
				(self.m_productId == other.m_productId))
	
	def getName(self):  	return self.m_deviceName
	def getId(self): 		return self.m_deviceId
